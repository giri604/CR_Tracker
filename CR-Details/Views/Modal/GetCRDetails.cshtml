@model CR_Details.Models.CRDetails

@*@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            alert("Hello");
            $('input[date-picker]').datepicker({
                dateFormat: "dd/MM/yyyy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });
    </script>

}*@

<form role="form" method="POST" action="/CR_Tracker/CRDetails">
    <table class="col-md-12">
        <tbody class="table">
            <tr>
                <td id="lblTitle">
                    @Html.LabelFor(model => model.CrTitle, "CR Title")
                </td>
                <td id="txtTitle">
                    @Html.EditorFor(model => model.CrTitle, new { htmlAttributes = new { @class = "form-control col-md-7" } })
                    @Html.ValidationMessageFor(model => model.CrTitle, "", new
                    {
                          @class = "text-danger"
                    })
                </td>
                <td id="lblDescription">
                    @Html.LabelFor(model => model.CrDescription, "CR description", new { htmlAttributes = new { @class = "form-control col-md-7" } })
                </td>
                <td id="txtDescription">
                    @Html.TextAreaFor(model => model.CrDescription, htmlAttributes: new
                                      {
                                          @class = "form-control col-md-12"
                                      })
                    @Html.ValidationMessageFor(model => model.CrDescription, "", new
                    {
                          @class = "text-danger"
                    })
                </td>
            </tr>
            <tr>
                <td id="lblComplexity">
                    @Html.LabelFor(model => model.ComplexityList, "Complexity (Including CRs)")
                </td>
                <td id="txtComplexity">
                    @Html.DropDownListFor(model => model.ComplexityList, new SelectList(Enum.GetValues(typeof(CR_Details.Models.Complexity))),
                    htmlAttributes: new
                     {
                      @class = "form-control col-md-7"
                     })
                    @Html.ValidationMessageFor(model => model.ComplexityList, "", new
                    {
                          @class = "text-danger"
                    })
                </td>
                <td id="lblDepartment">
                    @Html.LabelFor(model => model.DepartmentList, "Department")
                </td>
                <td id="txtDepartment">
                    @Html.DropDownListFor(model => model.DepartmentList, new SelectList(Enum.GetValues(typeof(CR_Details.Models.Department))),
                       htmlAttributes: new
                       {
                          @class = "form-control col-md-12"
                       })
                    @Html.ValidationMessageFor(model => model.DepartmentList, "", new
                    {
                          @class = "text-danger"
                    })
                </td>
            </tr>
            <tr>
                <td id="lblCategoryList">
                    @Html.LabelFor(model => model.CategoryList, "System Name")
                </td>
                <td id="txtCategoryList">
                    @Html.DropDownListFor(model => model.CategoryList, new SelectList(Enum.GetValues(typeof(CR_Details.Models.Category))),
                     htmlAttributes: new
                     {
                       @class = "form-control col-md-7"
                     })
                    @Html.ValidationMessageFor(model => model.CategoryList, "", new
                    {
                          @class = "text-danger"
                    })
                </td>
                <td id="lblKeyProjects">
                    @Html.LabelFor(model => model.KeyProjects, "Key Projects")
                </td>
                <td id="txtKeyProjects">
                    @Html.RadioButtonFor(model => model.KeyProjects, true)Yes
                    @Html.RadioButtonFor(model => model.KeyProjects, false) No
                </td>
            </tr>
            <tr>
                <td id="lblProjectCRReceivedDate">
                    @Html.LabelFor(model => model.ProjectCRReceivedDate, "Project / CR Received Date")
                </td>
                <td id="txtProjectCRReceivedDate">
                    @Html.EditorFor(model => model.ProjectCRReceivedDate, "{0:dd/MM/yy}", new { htmlAttributes = new { @class = "form-control col-md-7 date-picker", placeholder = "Project CR Received Date"} })
                    @Html.ValidationMessageFor(model => model.ProjectCRReceivedDate, "", new { @class = "text-danger" })
                </td>
                <td id="lblFinalProjectCRReceivedDate">
                    @Html.LabelFor(model => model.KeyProjects, "Final Project / CR Received Date")
                </td>
                <td id="txtFinalProjectCRReceivedDate">
                    @Html.EditorFor(model => model.FinalProjectCRReceivedDate, "{0:dd/MM/yy}", new { htmlAttributes = new { @class = "form-control col-md-12 date-picker", placeholder = "Final Project CR Received Date" } })
                    @Html.ValidationMessageFor(model => model.FinalProjectCRReceivedDate, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td id="lblUATDeliveryDate">
                    @Html.LabelFor(model => model.UATDeliveryDate, "UAT delivery date")
                </td>
                <td id="txtUATDeliveryDate">
                    @Html.EditorFor(model => model.UATDeliveryDate, "{0:dd/MM/yy}", new { htmlAttributes = new { @class = "form-control col-md-7 date-picker", placeholder = "UAT Delivery Date" } })
                    @Html.ValidationMessageFor(model => model.UATDeliveryDate, "", new { @class = "text-danger" })
                </td>
                <td id="lblUATSignoffDate">
                    @Html.LabelFor(model => model.UATSignoffDate, "UAT Signoff Date")
                </td>
                <td id="txtUATSignoffDate">
                    @Html.EditorFor(model => model.UATSignoffDate, "{0:dd/MM/yy}", new { htmlAttributes = new { @class = "form-control col-md-12 date-picker", placeholder = "UAT Signoff Date" } })
                    @Html.ValidationMessageFor(model => model.UATSignoffDate, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td id="lblUATDeliveryDate">
                    @Html.LabelFor(model => model.ProjectCRLiveDate, "Project / CR Live Date")
                </td>
                <td id="txtUATDeliveryDate">
                    @Html.EditorFor(model => model.ProjectCRLiveDate, "{0:dd/MM/yy}", new { htmlAttributes = new { @class = "form-control col-md-7 date-picker", placeholder = "Project CR Live Date" } })
                    @Html.ValidationMessageFor(model => model.ProjectCRLiveDate, "", new { @class = "text-danger" })
                </td>
                <td id="lblUATSignoffDate">
                    @Html.LabelFor(model => model.FirstCommittedLiveDate, "First Committed Live Date")
                </td>
                <td id="txtUATSignoffDate">
                    @Html.EditorFor(model => model.FirstCommittedLiveDate, "{0:dd/MM/yy}", new { htmlAttributes = new { @class = "form-control col-md-12 date-picker", placeholder = "First Committed Live Date" } })
                    @Html.ValidationMessageFor(model => model.FirstCommittedLiveDate, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td id="lblUnitLead">
                    @Html.LabelFor(model => model.UnitLead, "Unit Lead")
                </td>
                <td id="txtUnitLead">
                    @Html.DropDownListFor(model => model.UnitLead, new SelectList(Enum.GetValues(typeof(CR_Details.Models.Lead))),
                                          htmlAttributes: new
                                          {
                                            @class = "form-control col-md-7"
                                          })
                    @Html.ValidationMessageFor(model => model.UnitLead, "", new
                    {
                          @class = "text-danger"
                    })
                </td>
                <td id="lblNoOfCRReceivedDuringUAT">
                    @Html.LabelFor(model => model.NoOfCRReceivedDuringUAT, "No. of CRs received post signoff of original CR")
                </td>
                <td id="txtNoOfCRReceivedDuringUAT">
                    @Html.EditorFor(model => model.NoOfCRReceivedDuringUAT, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.NoOfCRReceivedDuringUAT, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td id="lblTAT">
                    @Html.LabelFor(model => model.TAT, "TAT (In Days)")
                </td>
                <td id="txtTAT">
                    @Html.EditorFor(model => model.TAT, new { htmlAttributes = new { @class = "form-control col-md-7" } })
                    @Html.ValidationMessageFor(model => model.TAT, "", new { @class = "text-danger" })
                </td>
                <td id="lblNoOfShowstoppersPostGoLive">
                    @Html.LabelFor(model => model.NoOfShowstoppersPostGoLive, "# of Showstoppers post go live:")
                </td>
                <td id="txtNoOfShowstoppersPostGoLive">
                    @Html.EditorFor(model => model.NoOfShowstoppersPostGoLive, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.NoOfShowstoppersPostGoLive, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td id="lblProjectCompletedSchedule">
                    @Html.LabelFor(model => model.ProjectCompletedSchedule, "Project Completed as Schedule")
                </td>
                <td id="txtProjectCompletedSchedule">
                    @Html.RadioButtonFor(model => model.ProjectCompletedSchedule, true, new { @checked = true })Yes
                    @Html.RadioButtonFor(model => model.ProjectCompletedSchedule, false) No
                </td>
                <td id="lblManager">
                    @Html.LabelFor(model => model.Manager, "Assigned To")
                </td>
                <td id="txtManager">
                    @Html.DropDownListFor(model => model.Manager, new SelectList(Enum.GetValues(typeof(CR_Details.Models.Lead))),
                                         htmlAttributes: new
                                              {
                                           @class = "form-control col-md-12"
                                         })
                    @Html.ValidationMessageFor(model => model.Manager, "", new
                    {
                          @class = "text-danger"
                    })
                </td>
            </tr>
            <tr>
                <td id="lblReasonRCA">
                    @Html.LabelFor(model => model.ReasonRCA, "Reason / RCA")
                </td>
                <td id="txtReasonRCA">
                    @Html.TextAreaFor(model => model.ReasonRCA, htmlAttributes: new
                    {
                        @class = "form-control col-md-7"
                    })
                    @Html.ValidationMessageFor(model => model.ReasonRCA, "", new
                    {
                          @class = "text-danger"
                    })
                </td>
            </tr>
            <tr>
                <td id="lblupload">
                    <label>Upload required Document</label>
                </td>
                <td id="txtReasonRCA">
                    <label for="fileInput" class="btn btn-info">Browse</label>
                    <input type="file" id="fileInput" name="AttachFile" multiple style="visibility:hidden;" />
                </td>
                <td>
                    <table class="table" id="FilesList">
                        <tr>
                            <th>
                                Attachment(s)
                            </th>
                            <th>Action</th>
                        </tr>
                    </table>
                </td>
            </tr>
        </tbody>
    </table>

    <div class="modal-footer justify-content-between">
        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-success">Save changes</button>
    </div>
</form>

